{"version":3,"sources":["state/entities/cryptocurrencies/cryptocurrencies.reducer.tsx","state/entities/index.tsx","state/global/global.reducer.tsx","state/reducers.tsx","utils/api.tsx","state/entities/cryptocurrencies/cryptocurrencies.mockedResponses.tsx","state/entities/cryptocurrencies/cryptocurrencies.saga.tsx","state/sagas.tsx","state/store.tsx","registerServiceWorker.tsx","index.tsx","state/entities/cryptocurrencies/cryptocurrencies.actions.tsx","common/PureBaseComponent/PureBaseComponent.tsx","types/fiatCurrency.type.tsx","common/BaseComponent/BaseComponent.tsx","common/Link/Link.tsx","common/Button/Button.tsx","common/Spinner/Spinner.tsx","common/Img/Img.tsx","common/PageLoadingBar/PageLoadingBar.tsx","state/global/global.actions.tsx","components/App/App.tsx","components/Header/Header.tsx","common/Loadable/Loadable.tsx","routes.tsx"],"names":["initialState","items","top","isLoading","isRefreshing","cryptocurrenciesReducer","state","arguments","length","undefined","action","produce","draft","type","getType","actions","cryptocurrencies","payload","reduce","acc","next","Object","objectSpread","defineProperty","id","map","c","cryptocurrency","combineReducers","currentFiatCurrency","FiatCurrency","EUR","globalReducer","fiatCurrency","config","storage","key","transforms","whitelist","reducers","entities","global","rootReducer","persistCombineReducers","API_URL","API_KEY","handleGeneralError","response","error","console","debug","handleBadRequestError","data","errorCode","message","get","_x","_x2","_get","apply","this","_callee2","url","options","regenerator_default","a","wrap","_context2","prev","abrupt","fetch","concat","mode","method","then","_ref","asyncToGenerator","mark","_callee","_context","json","ok","status","statusText","catch","stop","_x3","responseListingsCNY","camelcaseKeys","mockedListingsCNY","responseListingsEUR","mockedListingsEUR","responseListingsUSD","mockedListingsUSD","randomizePrice","price","Math","random","getResponseListingsCNY","e","quote","CNY","getResponseListingsEUR","getResponseListingsUSD","USD","fetchTopCryptocurrencies","watchFetchTopCryptocurrencies","fetchCryptocurrency","watchFetchCryptocurrency","getCryptocurrencyListings","responseListings","_context3","call","Promise","resolve","setTimeout","sent","put","t0","_marked","_context4","takeLatest","_marked2","_action$payload","currencyId","currency","_context6","_callee3","_context5","find","_marked3","_context7","_marked4","cryptocurrencies_saga","rootSaga","sagas","toConsumableArray","all","fork","sagas_marked","configureStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","sagaMiddlewareFactory","store","createStore","applyMiddleware","persistor","persistStore","run","Boolean","location","hostname","match","ReactDOM","react","integration_react","es","BrowserRouter","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","r","__webpack_exports__","d","fetchTopCryptocurrenciesSuccess","fetchTopCryptocurrenciesError","fetchCryptocurrencySuccess","fetchCryptocurrencyError","typesafe_actions__WEBPACK_IMPORTED_MODULE_0__","createAction","PureBaseComponent","React","BaseComponent","Component","Link","preventDefault","event","_this$props","props","href","disabled","children","className","classNames","classnames","Link--disabled","react__WEBPACK_IMPORTED_MODULE_5__","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","assign","to","onClick","defaultProps","Button","_cn","_this$props$disabled","_this$props$loading","loading","_this$props$theme","theme","_this$props$fab","fab","nativeRef","rest","_home_feimosi_Projects_povio_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","cn","_home_feimosi_Projects_povio_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_7__","common_Link__WEBPACK_IMPORTED_MODULE_9__","ref","common_Spinner__WEBPACK_IMPORTED_MODULE_11__","color","Spinner","_this$props$color","_this$props$size","size","style","width","height","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderLeftColor","Img","_home_feimosi_Projects_povio_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6__","alt","PageLoadingBar","changeFiatCurrency","components_Header__WEBPACK_IMPORTED_MODULE_8__","routes__WEBPACK_IMPORTED_MODULE_9__","hot","module","Header","react__WEBPACK_IMPORTED_MODULE_0__","common_Button__WEBPACK_IMPORTED_MODULE_1__","common_Img__WEBPACK_IMPORTED_MODULE_2__","common_Link__WEBPACK_IMPORTED_MODULE_3__","src","Loadable","ReactLoadable","delay","routes","AsyncHomePage","loader","bind","AsyncCryptocurrencyDetailsPage","AsyncSettingsPage","Switch","Route","path","exact","component"],"mappings":"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","file":"static/js/main.5ac7c0b6.chunk.js","sourcesContent":["import { Reducer } from 'redux';\nimport { ActionType, getType } from 'typesafe-actions';\nimport produce from 'immer';\n\nimport { Cryptocurrency } from 'types/cryptocurrency.type';\nimport * as actions from './cryptocurrencies.actions';\n\nexport type CryptocurrenciesAction = ActionType<typeof actions>;\n\nexport interface StateType {\n  readonly items: { [s: number]: Cryptocurrency };\n  readonly top: {\n    readonly items: number[];\n    readonly isLoading: boolean;\n    readonly isRefreshing: boolean;\n  };\n}\n\nconst initialState: StateType = {\n  items: {},\n  top: {\n    items: [],\n    isLoading: false,\n    isRefreshing: false,\n  },\n};\n\nconst cryptocurrenciesReducer: Reducer<StateType, CryptocurrenciesAction> =\n  (state = initialState, action) => produce<StateType>(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.fetchTopCryptocurrencies): {\n        draft.top.isLoading = true;\n        draft.top.isRefreshing = state.top.items.length > 0;\n        break;\n      }\n      case getType(actions.fetchTopCryptocurrenciesSuccess): {\n        const { cryptocurrencies } = action.payload;\n\n        draft.items = cryptocurrencies.reduce((acc, next) => ({ ...acc, [next.id]: next }), {});\n        draft.top.items = cryptocurrencies.map(c => c.id);\n        draft.top.isLoading = false;\n        draft.top.isRefreshing = false;\n        break;\n      }\n      case getType(actions.fetchCryptocurrencySuccess): {\n        const { cryptocurrency } = action.payload;\n\n        draft.items[cryptocurrency.id] = cryptocurrency;\n        break;\n      }\n    }\n  },\n);\n\nexport default cryptocurrenciesReducer;\n","import { combineReducers } from 'redux';\n\nimport cryptocurrencies from './cryptocurrencies/cryptocurrencies.reducer';\n\nexport default combineReducers({\n  cryptocurrencies,\n});\n","import { Reducer } from 'redux';\nimport { ActionType, getType } from 'typesafe-actions';\nimport produce from 'immer';\n\nimport { FiatCurrency } from 'types/fiatCurrency.type';\nimport * as actions from './global.actions';\n\nexport type GlobalAction = ActionType<typeof actions>;\n\nexport interface StateType {\n  readonly currentFiatCurrency: FiatCurrency;\n}\n\nconst initialState: StateType = {\n  currentFiatCurrency: FiatCurrency.EUR,\n};\n\nconst globalReducer: Reducer<StateType, GlobalAction> =\n  (state = initialState, action) => produce<StateType>(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.changeFiatCurrency): {\n        draft.currentFiatCurrency = action.payload.fiatCurrency;\n        break;\n      }\n    }\n  },\n);\n\nexport default globalReducer;\n","import { persistCombineReducers, PersistConfig } from 'redux-persist';\nimport storage from 'redux-persist/es/storage';\nimport { StateType } from 'typesafe-actions';\n\nimport entities from './entities';\nimport global from './global/global.reducer';\n\nconst config: PersistConfig = {\n  storage,\n  key: 'root',\n  transforms: [],\n  whitelist: [],\n};\n\nconst reducers = {\n  entities,\n  global,\n};\n\nconst rootReducer = persistCombineReducers(config, reducers);\n\nexport default rootReducer;\n\nexport type RootState = StateType<typeof reducers>;\n","const API_URL = 'https://pro-api.coinmarketcap.com/v1';\nconst API_KEY = '08db62f1-1996-4742-8b11-e8e481ade597';\n\n/* tslint:disable no-any */\nfunction handleGeneralError(response: any, error: any) {\n  console.debug(response);\n  console.error('Request error ', error);\n}\n\nfunction handleBadRequestError(response: any) {\n  if (response.data && response.data.errorCode === 400 && response.data.message) {\n    console.error('Bad request ', response.data.message);\n  }\n\n  return response;\n}\n/* tslint:enable no-any */\n\nexport async function get(url: string, options?: RequestInit) {\n  return fetch(`${API_URL}${url}&CMC_PRO_API_KEY=${API_KEY}`, {\n    mode: 'no-cors',\n    ...options,\n    method: 'GET',\n  }).then(async response =>\n      response.json()\n        .then(handleBadRequestError)\n        .then(data => ({\n          data,\n          ok: response.ok,\n          status: response.status,\n          statusText: response.statusText,\n          type: response.type,\n        }))\n        .catch(error => handleGeneralError(response, error)),\n  );\n}\n","import camelcaseKeys from 'camelcase-keys';\n\nimport * as mockedListingsCNY from './mocked-listings-CNY.json';\nimport * as mockedListingsEUR from './mocked-listings-EUR.json';\nimport * as mockedListingsUSD from './mocked-listings-USD.json';\nimport { Cryptocurrency } from 'types/cryptocurrency.type.js';\n\nconst responseListingsCNY: Cryptocurrency[] = camelcaseKeys(mockedListingsCNY.data);\nconst responseListingsEUR: Cryptocurrency[] = camelcaseKeys(mockedListingsEUR.data);\nconst responseListingsUSD: Cryptocurrency[] = camelcaseKeys(mockedListingsUSD.data);\n\nconst randomizePrice = (price: number) =>\n  price * ((Math.random() - Math.random()) / 10 + 1);\n\n// NOTE: Workaround: camelcaseKeys breaks when parsing 'quote' property\nexport const getResponseListingsCNY = (): Cryptocurrency[] => responseListingsCNY.map((e: Cryptocurrency) => ({\n  ...e,\n  quote: {\n    ...e.quote,\n    CNY: {\n      ...camelcaseKeys(e.quote.CNY),\n      price: randomizePrice(e.quote.CNY.price),\n    },\n  },\n}));\n\nexport const getResponseListingsEUR = (): Cryptocurrency[] => responseListingsEUR.map((e: Cryptocurrency) => ({\n  ...e,\n  quote: {\n    ...e.quote,\n    EUR: {\n      ...camelcaseKeys(e.quote.EUR),\n      price: randomizePrice(e.quote.EUR.price),\n    },\n  },\n}));\n\nexport const getResponseListingsUSD = (): Cryptocurrency[] => responseListingsUSD.map((e: Cryptocurrency) => ({\n  ...e,\n  quote: {\n    ...e.quote,\n    USD: {\n      ...camelcaseKeys(e.quote.USD),\n      price: randomizePrice(e.quote.USD.price),\n    },\n  },\n}));\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { getType, ActionType } from 'typesafe-actions';\n\nimport { Cryptocurrency } from 'types/cryptocurrency.type';\nimport { FiatCurrency } from 'types/fiatCurrency.type';\nimport { get } from 'utils/api';\n\nimport * as actions from './cryptocurrencies.actions';\nimport * as responseListings from './cryptocurrencies.mockedResponses';\n\nfunction getCryptocurrencyListings(fiatCurrency: FiatCurrency): Cryptocurrency[] {\n  return fiatCurrency === FiatCurrency.CNY ?\n    responseListings.getResponseListingsCNY() :\n    fiatCurrency === FiatCurrency.EUR ?\n      responseListings.getResponseListingsEUR() :\n      fiatCurrency === FiatCurrency.USD ?\n        responseListings.getResponseListingsUSD() : [];\n}\n\nfunction* fetchTopCryptocurrencies(action: ActionType<typeof actions.fetchTopCryptocurrencies>) {\n  try {\n    const { fiatCurrency } = action.payload;\n\n    // NOTE: Coinbase API requires to proxy requests through our own backend\n    // For now the responses have been mocked\n    // See: https://pro.coinmarketcap.com/api/v1#section/Quick-Start-Guide\n    yield call(async () => get('/cryptocurrency/listings/latest?start=1&limit=100&convert=USD'));\n\n    const response: { data: Cryptocurrency[] } = yield call(async () =>\n      new Promise(resolve =>\n        setTimeout(() => resolve({ data: getCryptocurrencyListings(fiatCurrency) }), 300),\n      ));\n\n    yield put(actions.fetchTopCryptocurrenciesSuccess(response.data));\n  } catch (error) {\n    yield put(actions.fetchTopCryptocurrenciesError(error));\n  }\n}\n\nexport function* watchFetchTopCryptocurrencies() {\n  yield takeLatest(getType(actions.fetchTopCryptocurrencies), fetchTopCryptocurrencies);\n}\n\nfunction* fetchCryptocurrency(action: ActionType<typeof actions.fetchCryptocurrency>) {\n  try {\n    const { currencyId, fiatCurrency } = action.payload;\n\n    const response: { data: Cryptocurrency[] } = yield call(async () =>\n      new Promise(resolve =>\n        setTimeout(() => resolve({ data: getCryptocurrencyListings(fiatCurrency) }), 300),\n      ));\n\n    yield put(actions.fetchTopCryptocurrenciesSuccess(response.data));\n\n    const currency = response.data.find(c => c.id === currencyId);\n\n    yield put(actions.fetchCryptocurrencySuccess(currency));\n  } catch (error) {\n    yield put(actions.fetchCryptocurrencyError(error));\n  }\n}\n\nexport function* watchFetchCryptocurrency() {\n  yield takeLatest(getType(actions.fetchCryptocurrency), fetchCryptocurrency);\n}\n\nexport default [\n  watchFetchTopCryptocurrencies,\n  watchFetchCryptocurrency,\n];\n","import { fork, all } from 'redux-saga/effects';\n\nimport cryptocurrencies from './entities/cryptocurrencies/cryptocurrencies.saga';\n\nconst sagas = [\n  ...cryptocurrencies,\n];\n\nfunction* rootSaga() {\n  yield all(sagas.map(fork));\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware, compose, StoreEnhancer } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport sagaMiddlewareFactory from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__(enhancer: StoreEnhancer<{ dispatch: {} }>): StoreEnhancer;\n  }\n}\n\nconst configureStore = (initialState = {}) => {\n  /* tslint:disable-next-line no-unbound-method */\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const sagaMiddleware = sagaMiddlewareFactory();\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(sagaMiddleware),\n    ),\n  );\n  const persistor = persistStore(store);\n\n  sagaMiddleware.run(rootSaga);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (module.hot) {\n      module.hot.accept('./reducers', () => {\n        store.replaceReducer(rootReducer);\n      });\n    }\n  }\n\n  return { persistor, store };\n};\n\nexport default configureStore;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\n/* tslint:disable no-console no-backbone-get-set-outside-model no-floating-promises */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    // @ts-ignore\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers\n          .get('content-type')\n          .indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister()\n            .then(() => {\n              window.location.reload();\n            });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'whatwg-fetch';\nimport 'intersection-observer';\nimport 'normalize.css';\n\nimport App from 'components/App';\nimport configureStore from 'state/store';\nimport { unregister } from './registerServiceWorker';\nimport './index.css';\n\nconst { persistor, store } = configureStore();\n\nconst getRootComponent = () => (\n  <PersistGate persistor={ persistor }>\n    <Provider store={ store }>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </PersistGate>\n);\n\nconst renderApp = () => {\n  ReactDOM.render(\n    getRootComponent(),\n    document.getElementById('root'),\n  );\n};\n\nrenderApp();\n\nif (module.hot) {\n  module.hot.accept('components/App', renderApp);\n}\n\nunregister();\n","import { createAction } from 'typesafe-actions';\n\nimport { Cryptocurrency } from 'types/cryptocurrency.type';\nimport { FiatCurrency } from 'types/fiatCurrency.type';\n\n/* Fetch top cryptocurrencies */\n\nexport const fetchTopCryptocurrencies =\n  createAction('Cryptocurrencies / Fetch top cryptocurrencies / Loading', resolve =>\n    (fiatCurrency: FiatCurrency) => resolve({ fiatCurrency }),\n  );\n\nexport const fetchTopCryptocurrenciesSuccess =\n  createAction('Cryptocurrencies / Fetch top cryptocurrencies / Success', resolve =>\n    (cryptocurrencies: Cryptocurrency[]) => resolve({ cryptocurrencies }),\n  );\n\nexport const fetchTopCryptocurrenciesError =\n  createAction('Cryptocurrencies / Fetch top cryptocurrencies / Error', resolve =>\n    error => resolve({ error }),\n  );\n\n/* Fetch cryptocurrency */\n\nexport const fetchCryptocurrency =\n  createAction('Cryptocurrencies / Fetch cryptocurrency / Loading', resolve =>\n    (currencyId: number, fiatCurrency: FiatCurrency) => resolve({ currencyId, fiatCurrency }),\n  );\n\nexport const fetchCryptocurrencySuccess =\n  createAction('Cryptocurrencies / Fetch cryptocurrency / Success', resolve =>\n    (cryptocurrency: Cryptocurrency) => resolve({ cryptocurrency }),\n  );\n\nexport const fetchCryptocurrencyError =\n  createAction('Cryptocurrencies / Fetch cryptocurrency / Error', resolve =>\n    error => resolve({ error }),\n  );\n","import * as React from 'react';\n\nexport default class PureBaseComponent<Props, State = {}> extends React.PureComponent<Props, State> {}\n","export enum FiatCurrency {\n  USD = 'USD',\n  EUR = 'EUR',\n  CNY = 'CNY',\n}\n","import { Component } from 'react';\n\nexport default class BaseComponent<Props, State = {}> extends Component<Props, State> {\n  state: State;\n  props: Props;\n}\n","import * as React from 'react';\nimport { Link as ReactRouterLink, LinkProps as ReactRouterLinkProps } from 'react-router-dom';\nimport classnames from 'classnames';\n\nimport PureBaseComponent from 'common/PureBaseComponent';\nimport './Link.css';\n\ninterface CommonProps {\n  disabled?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\ninterface RouterProps extends CommonProps, ReactRouterLinkProps {}\ninterface AnchorProps extends CommonProps, React.AnchorHTMLAttributes<HTMLAnchorElement> {}\n\ntype Props = RouterProps | AnchorProps;\n\ninterface DefaultProps {\n  disabled: boolean;\n}\n\nexport default class Link extends PureBaseComponent<Props> {\n  static defaultProps: DefaultProps = {\n    disabled: false,\n  };\n\n  preventDefault = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n  }\n\n  render() {\n    const { href, disabled, children, className } = this.props;\n    const classNames = classnames(\n      className,\n      'Link', {\n        'Link--disabled': disabled,\n      },\n    );\n\n    if ('to' in this.props) {\n      return (\n        <ReactRouterLink\n          { ...this.props }\n          to={ this.props.to }\n          className={ classNames }\n          onClick={ disabled ? this.preventDefault : null }\n        />\n      );\n    }\n\n    return (\n      <a\n        { ...this.props }\n        href={ disabled ? null : href }\n        className={ classNames }\n      >\n        { children }\n      </a>\n    );\n  }\n}\n","import * as React from 'react';\nimport cn from 'classnames';\n\nimport Link from 'common/Link';\nimport PureBaseComponent from 'common/PureBaseComponent';\nimport Spinner from 'common/Spinner';\n\nimport './Button.css';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  disabled?: boolean;\n  loading?: boolean;\n  theme?: 'default' | 'primary' | 'secondary' | 'link' | 'unstyled';\n  fab?: boolean;\n  to?: string;\n  href?: string;\n  nativeRef?(el: HTMLElement): void;\n  onClick?(e: React.MouseEvent): void;\n}\n\nexport default class Button extends PureBaseComponent<Props & React.ButtonHTMLAttributes<HTMLButtonElement>> {\n  render() {\n    const {\n      children,\n      className,\n      disabled = false,\n      loading = false,\n      theme = 'default',\n      fab = false,\n      to,\n      href,\n      nativeRef,\n      onClick,\n      ...rest\n    } = this.props;\n\n    const classNames = cn(\n      className,\n      'Button', {\n        [`Button--${theme}`]: theme,\n        'Button--disabled': disabled,\n        'Button--fab': fab,\n      },\n    );\n\n    if (to || href) {\n      return (\n        <Link\n          className={ classNames }\n          to={ to }\n          href={ href }\n          disabled={ disabled }\n        >\n          { children }\n        </Link>\n      );\n    }\n\n    return (\n      <button\n        className={ classNames }\n        disabled={ disabled }\n        onClick={ onClick }\n        ref={ nativeRef }\n        { ...rest }\n      >\n        { children }\n        { loading &&\n          <Spinner className=\"Button__loader\" color={ disabled ? '#1200FF' : '#FFF' } />\n        }\n      </button>\n    );\n  }\n}\n","import * as React from 'react';\nimport cn from 'classnames';\n\nimport PureBaseComponent from 'common/PureBaseComponent';\nimport './Spinner.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: number;\n}\n\nexport default class Spinner extends PureBaseComponent<Props> {\n  render() {\n    const {\n      className,\n      color = '#ffffff',\n      size = 16,\n    } = this.props;\n\n    const classNames = cn(className, 'Spinner');\n    const style = {\n      width: `${size}px`,\n      height: `${size}px`,\n      borderTopWidth: `${size / 8}px`,\n      borderRightWidth: `${size / 8}px`,\n      borderBottomWidth: `${size / 8}px`,\n      borderLeftWidth: `${size / 8}px`,\n      borderLeftColor: color,\n    };\n\n    return (\n      <span className={ classNames } style={ style } />\n    );\n  }\n}\n","import * as React from 'react';\nimport cn from 'classnames';\n\nimport PureBaseComponent from 'common/PureBaseComponent';\n\ninterface Props {\n  className?: string;\n}\n\nexport default class Img extends PureBaseComponent<Props & React.ImgHTMLAttributes<HTMLImageElement>> {\n  render() {\n    const { className, ...rest } = this.props;\n    const classNames = cn('Img', className);\n\n    return (\n      <img\n        alt=\"\"\n        className={ classNames }\n        { ...rest }\n      />\n    );\n  }\n}\n","import * as React from 'react';\n\nimport BaseComponent from 'common/BaseComponent';\nimport './PageLoadingBar.css';\n\nexport default class PageLoadingBar extends BaseComponent<{}> {\n  render() {\n    return (\n      <div className=\"PageLoadingBar\" />\n    );\n  }\n}\n","import { createAction } from 'typesafe-actions';\n\nimport { FiatCurrency } from 'types/fiatCurrency.type';\n\nexport const changeFiatCurrency =\n  createAction('Global / Change fiat currency', resolve =>\n    (fiatCurrency: FiatCurrency) => resolve({ fiatCurrency }),\n  );\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\n\nimport BaseComponent from 'common/BaseComponent';\nimport Header from 'components/Header';\nimport Routes from 'routes';\n\nimport './App.css';\n\nclass App extends BaseComponent<{}> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(App);\n","import * as React from 'react';\n\nimport Button from 'common/Button';\nimport Img from 'common/Img';\nimport Link from 'common/Link';\nimport './Header.css';\n\nexport default function Header() {\n  return (\n    <div className=\"Header\">\n      <Link to=\"/\">\n        Cryptocurrency ranking\n      </Link>\n      <Button className=\"Header__settingsButton\" to=\"/settings\">\n        <Img src=\"/img/settings.svg\" />\n      </Button>\n   </div>\n  );\n}\n","import * as React from 'react';\nimport * as ReactLoadable from 'react-loadable';\n\nimport PageLoadingBar from 'common/PageLoadingBar';\nimport './Loadable.css';\n\nexport default function Loadable(props:\n  Omit<ReactLoadable.OptionsWithoutRender<{}>, 'loading'>,\n) {\n  return (\n    ReactLoadable({\n      loading: () => <div><PageLoadingBar /></div>,\n      delay: 300,\n      ...props,\n    })\n  );\n}\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Loadable from 'common/Loadable';\n\n// TODO: Temp solution to avoid FOUC\nimport 'components/HomePage/HomePage.css';\n\n/* tslint:disable space-in-parens promise-function-async */\nconst AsyncHomePage = Loadable({\n  loader: () => import(/* webpackChunkName: \"homePage\" */ 'components/HomePage'),\n});\nconst AsyncCryptocurrencyDetailsPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"homePage\" */ 'components/CryptocurrencyDetailsPage'),\n});\nconst AsyncSettingsPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"homePage\" */ 'components/SettingsPage'),\n});\n/* tslint:enable space-in-parens promise-function-async */\n\nexport default function routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={ AsyncHomePage } />\n      <Route path=\"/currency/:currencyId/:currency\" exact component={ AsyncCryptocurrencyDetailsPage } />\n      <Route path=\"/settings\" exact component={ AsyncSettingsPage } />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}